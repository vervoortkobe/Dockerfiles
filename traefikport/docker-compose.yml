version: "3"
services:
  traefik-proxy:
    image: traefik:v2.10
    ports:
      - 80:80
      - 443:443
    volumes:
      - "./traefik.yml:/etc/traefik/traefik.yml"
      - "./letsencrypt-certs:/ssl-certs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # - "./passwd:/etc/traefik/passwd"
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      # - "traefik.http.routers.dashboard.middlewares=auth"
      # - "traefik.http.middlewares.auth.basicauth.users="
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.entrypoints=websecure"

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - 9000:9000
      - 9443:9443
    command: -H unix:///var/run/docker.sock
    restart: always
    depends_on: 
      - traefik-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer-data:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOST}`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.service=portainer"
    networks:
      - proxy

networks:
  default:
    external: true
    name: traefik
  proxy:
    external: true
    name: traefik

volumes:
  portainer-data:
